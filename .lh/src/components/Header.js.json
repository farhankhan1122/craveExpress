{
    "sourceFile": "src/components/Header.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1747224258642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1747224258642,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useContext } from \"react\";\r\nimport { LOGO_URL } from \"../utils.js/constants\"; //because named export\r\nimport { Link } from \"react-router-dom\";\r\n// import { ReactDOM } from \"react-dom/client\";\r\nimport useOnlineStatus from \"../utils.js/customHooks/useOnlineStatus\";\r\nimport UserContext from \"../utils.js/userContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport newLogo from \"../../public/icons/cravexpress-3.webp\";\r\nimport menuIcon from \"../../public/icons/burger-menu.svg\";\r\n\r\nexport const Header = ({ activeHeader }) => {\r\n  const [btnNameReact, setBtnNameReact] = useState(\"Login\");\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const onlineStatus = useOnlineStatus();\r\n  const { loggedInUser } = useContext(UserContext);\r\n\r\n  // Selector hook\r\n  // subscribing to the store using Selector hook\r\n  const cartItems = useSelector((store) => store.cart.items);\r\n\r\n  const handleMenu = () => {\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  const handleClearItem = () => {\r\n    dispatch(clearItems());\r\n  };\r\n\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 10) {\r\n        setIsScrolled(true);\r\n      } else {\r\n        setIsScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`mobile_head fixed w-full flex items-center justify-between h-[80px] px-[20px] text-[18px] \r\n      ${activeHeader ? \"z-[10]\" : \"z-[5]\"} \r\n      ${activeHeader && !isScrolled ? \"text-white\" : \"text-black\"} \r\n      ${isScrolled ? \"bg-white shadow-custom\" : \"bg-transparent\"}`}\r\n    >\r\n      <div className=\"mobile_header_item w-[120px] h-auto relative\">\r\n        {/* <img className=\"rounded-full\" slt=\"food logo\" src=\"/public/icons/BiteLogo.svg\" /> */}\r\n        <Link to=\"/\">\r\n          <img className=\"\" slt=\"food logo\" src={newLogo} />\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-items big_screen\">\r\n        <ul className=\"flex items-center gap-[40px] pr-[30px] \">\r\n          {/* <li>online status: {onlineStatus ? \"âœ…\" : \"ðŸ”´\"}</li> */}\r\n          <li>\r\n            <Link to={\"/\"}>Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={\"/about\"}>About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={\"/contact\"}>Contact Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={\"/grocery\"}>Grocery store</Link>\r\n          </li>\r\n          <li className=\"relative\">\r\n            <Link\r\n              className=\"flex items-center gap-2 cart_item_wrapper\"\r\n              to={\"/cart\"}\r\n            >\r\n              <span className=\"cart_el cart_item\">\r\n                <svg\r\n                  className=\"cart_svg cart_svg_color\"\r\n                  viewBox=\"-1 0 37 32\"\r\n                  height=\"20\"\r\n                  width=\"20\"\r\n                  fill=\"#686b78\"\r\n                >\r\n                  <path d=\"M4.438 0l-2.598 5.11-1.84 26.124h34.909l-1.906-26.124-2.597-5.11z\"></path>\r\n                </svg>\r\n                <span className=\"cart_item_count\">{cartItems.length}</span>\r\n              </span>\r\n              <span>Cart</span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <button\r\n              onClick={() => {\r\n                btnNameReact === \"Login\"\r\n                  ? setBtnNameReact(\"Logout\")\r\n                  : setBtnNameReact(\"Login\");\r\n              }}\r\n            >\r\n              {btnNameReact}\r\n            </button>\r\n          </li>\r\n          {/* <li className=\"font-bold\">\r\n            {loggedInUser}\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n      <button onClick={handleMenu} className=\"menu_icon small_screen mobile_header_item\">\r\n        {!showMenu ? (\r\n          <svg\r\n            width=\"40px\"\r\n            height=\"40px\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M4 18L20 18\"\r\n              stroke={activeHeader && !isScrolled ? \"#ffffff\" : \"#000000\"}\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n            />\r\n            <path\r\n              d=\"M4 12L20 12\"\r\n              stroke={activeHeader && !isScrolled ? \"#ffffff\" : \"#000000\"}\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n            />\r\n            <path\r\n              d=\"M4 6L20 6\"\r\n              stroke={activeHeader && !isScrolled ? \"#ffffff\" : \"#000000\"}\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            fill='#000'\r\n            height=\"40px\"\r\n            viewBox=\"0 0 32 32\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M18.8,16l5.5-5.5c0.8-0.8,0.8-2,0-2.8l0,0C24,7.3,23.5,7,23,7c-0.5,0-1,0.2-1.4,0.6L16,13.2l-5.5-5.5  c-0.8-0.8-2.1-0.8-2.8,0C7.3,8,7,8.5,7,9.1s0.2,1,0.6,1.4l5.5,5.5l-5.5,5.5C7.3,21.9,7,22.4,7,23c0,0.5,0.2,1,0.6,1.4  C8,24.8,8.5,25,9,25c0.5,0,1-0.2,1.4-0.6l5.5-5.5l5.5,5.5c0.8,0.8,2.1,0.8,2.8,0c0.8-0.8,0.8-2.1,0-2.8L18.8,16z\" />\r\n          </svg>\r\n        )}\r\n      </button>\r\n      {showMenu && (\r\n        <div className={`menu_dropdown absolute bg-white text-black w-full top-[0px] left-0 z-9\r\n\r\n          `}>\r\n          <ul className=\"p-4 pt-[60px]\">\r\n            <li>\r\n              <Link to={\"/\"} onClick={() => setShowMenu(false)}>Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/about\"} onClick={() => setShowMenu(false)}>About Us</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/contact\"} onClick={() => setShowMenu(false)}>Contact Us</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/grocery\"} onClick={() => setShowMenu(false)}>Grocery store</Link>\r\n            </li>\r\n            <li className=\"relative\">\r\n              <Link\r\n                className=\"flex items-center gap-2 cart_item_wrapper\"\r\n                to={\"/cart\"} onClick={() => setShowMenu(false)}\r\n              >\r\n                <span className=\"cart_el cart_item\">\r\n                  <svg\r\n                    className=\"cart_svg cart_svg_color\"\r\n                    viewBox=\"-1 0 37 32\"\r\n                    height=\"20\"\r\n                    width=\"20\"\r\n                    fill=\"#686b78\"\r\n                  >\r\n                    <path d=\"M4.438 0l-2.598 5.11-1.84 26.124h34.909l-1.906-26.124-2.597-5.11z\"></path>\r\n                  </svg>\r\n                  <span className=\"cart_item_count\">{cartItems.length}</span>\r\n                </span>\r\n                <span>Cart</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  btnNameReact === \"Login\"\r\n                    ? setBtnNameReact(\"Logout\")\r\n                    : setBtnNameReact(\"Login\");\r\n                }}\r\n              >\r\n                {btnNameReact}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n// ${activeHeader && !isScrolled ? \"text-white\" : \"text-black\"} \r\n// ${isScrolled ? \"bg-white shadow-custom\" : \"bg-transparent\"}\r\n// there are two ways to export above is the first one\r\n"
        }
    ]
}